{"version":3,"sources":["context/AppContext.js","components/Budget.js","components/Remaining.js","components/ExpenseTotal.js","components/ExpenseItem.js","components/ExpenseList.js","components/AddExpenseForm.js","App.js","reportWebVitals.js","index.js"],"names":["AppReducer","state","action","type","console","log","payload","expenses","filter","expense","id","initialState","budget","name","cost","AppContext","React","createContext","AppProvider","props","useReducer","dispatch","Provider","value","children","Budget","useContext","className","Remaining","totalExpenses","reduce","total","item","alertType","ExpenseTotal","ExpenseItem","size","onClick","ExpenseList","map","AddExpenseForm","useState","setName","setCost","onSubmit","event","preventDefault","uuidv4","parseInt","for","required","onChange","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.714abfd0.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\n\nconst AppReducer = (state, action) => {\n  switch(action.type) {\n    case 'ADD_EXPENSE':\n      // console.log(expenses)\n      console.log(action.payload);\n      return{\n        ...state,\n        expenses: [...state.expenses, action.payload],\n      };\n    case 'DELETE_EXPENSE':\n      return{\n        ...state,\n        expenses: state.expenses.filter(\n          (expense) => expense.id !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  budget: 2000,\n  expenses: [\n    {id: 12, name: 'shopping', cost: 40},\n    {id: 13, name: 'holiday', cost: 400},\n    {id: 14, name: 'car service', cost: 50},\n  ],\n};\n\nexport const AppContext = React.createContext()\n\nexport const AppProvider = (props) =>{\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  return (\n    <AppContext.Provider\n      value={{\n        budget: state.budget,\n        expenses: state.expenses,\n        dispatch,\n       }}\n    >\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { AppContext } from '../context/AppContext';\n\nconst Budget = () =>{\n  const { budget } = useContext(AppContext);\n\n  return (\n    <div className='alert alert-secondary'>\n      <span>Budget: ${budget}</span>\n    </div>\n  );\n};\n\nexport default Budget;\n","import React, {useContext } from 'react';\nimport { AppContext } from '../context/AppContext';\n\nconst Remaining = () =>{\n  const {expenses, budget } = useContext(AppContext);\n  const totalExpenses = expenses.reduce((total,item) =>{\n    return (total = total + item.cost);\n  }, 0);\n  const alertType = totalExpenses > budget ? 'alert-danger' : 'alert-success';\n\n  return (\n    <div className={`alert ${alertType}`}>\n      <span>Remaining: ${budget - totalExpenses}</span>\n    </div>\n  );\n};\nexport default Remaining;\n","import React, {useContext} from 'react';\nimport { AppContext } from '../context/AppContext';\n\nconst ExpenseTotal = () => {\n  const { expenses } = useContext(AppContext);\n  const totalExpenses = expenses.reduce((total, item) => {\n    return (total += item.cost);\n  },0)\n  return (\n    <div className='alert alert-primary'>\n      <span>Spent so far: ${totalExpenses}</span>\n    </div>\n  );\n};\nexport default ExpenseTotal;\n","import React, { useContext} from 'react';\nimport { TiDelete } from 'react-icons/ti';\nimport { AppContext} from '../context/AppContext';\n\nconst ExpenseItem = (props) => {\n  const {dispatch } = useContext(AppContext);\n  const handleDeleteExpense = () =>{\n    dispatch({\n      type: 'DELETE_EXPENSE',\n      payload: props.id,\n    });\n  };\n\n  return (\n    <li className = 'list-group-item d-flex justify-content-between align-items-center'>\n      {props.name}\n      <div>\n        <span>${props.cost}</span>\n\n        <TiDelete size='1.5em' onClick={handleDeleteExpense}></TiDelete>\n      </div>\n    </li>\n  );\n};\nexport default ExpenseItem;\n","import React, { useContext } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport { AppContext } from '../context/AppContext';\n\nconst ExpenseList = () =>{\n    const { expenses } = useContext(AppContext);\n\n    return (\n      <ul className = 'list-group'>\n        {expenses.map((expense) =>(\n          <ExpenseItem id={expense.id} name={expense.name} cost= {expense.cost}/>\n        ))}\n      </ul>\n    )\n\n}\nexport default ExpenseList\n","import React, { useContext, useState } from 'react';\nimport { AppContext } from '../context/AppContext';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst AddExpenseForm = () => {\n\tconst { dispatch } = useContext(AppContext);\n\n\tconst [name, setName] = useState('');\n\tconst [cost, setCost] = useState('');\n\n\tconst onSubmit = (event) => {\n    console.log(\"onsubmit\");\n\t\tevent.preventDefault();\n\n\t\tconst expense = {\n\t\t\tid: uuidv4(),\n\t\t\tname: name,\n\t\t\tcost: parseInt(cost),\n\t\t};\n\n\t\tdispatch({\n\t\t\ttype: 'ADD_EXPENSE',\n\t\t\tpayload: expense,\n\t\t});\n\t};\n\n\treturn (\n\t\t<form onSubmit={onSubmit}>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-sm'>\n\t\t\t\t\t<label for='name'>Name</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\trequired='required'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\tid='name'\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={(event) => setName(event.target.value)}\n\t\t\t\t\t></input>\n\t\t\t\t</div>\n\t\t\t\t<div className='col-sm'>\n\t\t\t\t\t<label for='cost'>Cost</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\trequired='required'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\tid='cost'\n\t\t\t\t\t\tvalue={cost}\n\t\t\t\t\t\tonChange={(event) => setCost(event.target.value)}\n\t\t\t\t\t></input>\n\t\t\t\t</div>\n\t\t\t\t<div className='col-sm'>\n\t\t\t\t\t<button type='submit' className='btn btn-primary mt-3'>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default AddExpenseForm;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Budget from './components/Budget';\nimport Remaining from './components/Remaining';\nimport ExpenseTotal from './components/ExpenseTotal';\nimport ExpenseList from './components/ExpenseList'\nimport AddExpenseForm from './components/AddExpenseForm';\nimport {AppProvider } from './context/AppContext';\n\n\nconst App = () =>{\n  return (\n    <AppProvider>\n      <div className = 'container'>\n        <h1 className = 'mt-3'>My Budget Planner(A big thank to Chris for the wonderful tutorial!)</h1>\n        <div className ='row mt-3'>\n          <div className = 'col-sm'>\n            <Budget />\n          </div>\n          <div className = 'col-sm'>\n            <Remaining />\n          </div>\n          <div className = 'col-sm'>\n            <ExpenseTotal />\n          </div>\n        </div>\n\n        <h3 className ='mt-3'>Expenses</h3>\n        <div className = 'row mt-3'>\n          <div className = 'col-sm'>\n            <ExpenseList />\n          </div>\n        </div>\n\n        <h3 className = 'mt-3'>Add Expense</h3>\n        <div className = 'row mt-3'>\n          <div className = 'col-sm'>\n            <AddExpenseForm />\n          </div>\n        </div>\n\n      </div>\n    </AppProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}